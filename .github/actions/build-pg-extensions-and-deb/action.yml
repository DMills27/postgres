name: Build pg extensions & deb packages
description: ''

inputs:
  arch:
    description: 'e.g. arm'
    required: true
  ubuntu_release:
    description: 'e.g. focal'
    required: true
  ubuntu_version:
    description: 'e.g. 20.04'
    required: true
  mcpu:
    description: 'e.g. neoverse-n1'
    required: true

runs:
  using: composite
  steps:
    - id: args
      uses: mikefarah/yq@master
      with:
        cmd: yq 'to_entries | map(select(.value|type == "!!str")) |  map(.key + "=" + .value) | join("\n")' 'ansible/vars.yml'

    - run: docker context create builders
      shell: bash

    - uses: docker/setup-buildx-action@v3
      with:
        endpoint: builders

    - uses: docker/build-push-action@v5
      with:
        load: true
        build-args: |
          ${{ steps.args.outputs.result }}
        target: extensions
        tags: supabase/postgres:extensions
        platforms: linux/${{ matrix.arch }}
        cache-from: |
          type=gha,scope=${{ github.ref_name }}-extensions
          type=gha,scope=${{ github.base_ref }}-extensions
          type=gha,scope=develop-extensions
        cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-extensions

    - name: Extract built packages
      run: |
        mkdir -p /tmp/extensions ansible/files/extensions
        docker save supabase/postgres:extensions | tar xv -C /tmp/extensions
        for layer in /tmp/extensions/*/layer.tar; do
          tar xvf "$layer" -C ansible/files/extensions --strip-components 1
        done
      shell: bash

    - id: version
      run: echo "${{ steps.args.outputs.result }}" | grep "postgresql" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Build Postgres deb
      uses: docker/build-push-action@v5
      with:
        load: true
        file: docker/Dockerfile
        target: pg-deb
        build-args: |
          ubuntu_release=${{ matrix.ubuntu_release }}
          ubuntu_release_no=${{ matrix.ubuntu_version }}
          postgresql_major=${{ steps.version.outputs.postgresql_major }}
          postgresql_release=${{ steps.version.outputs.postgresql_release }}
          CPPFLAGS=-mcpu=${{ matrix.mcpu }}
        tags: supabase/postgres:deb
        platforms: linux/${{ matrix.arch }}
        cache-from: |
          type=gha,scope=${{ github.ref_name }}-deb
          type=gha,scope=${{ github.base_ref }}-deb
          type=gha,scope=develop-deb
        cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-deb

    - name: Extract Postgres deb
      run: |
        mkdir -p /tmp/build ansible/files/postgres
        docker save supabase/postgres:deb | tar xv -C /tmp/build
        for layer in /tmp/build/*/layer.tar; do
          tar xvf "$layer" -C ansible/files/postgres --strip-components 1
        done
      shell: bash
