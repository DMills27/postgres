# plrust
- name: plrust - update and install dependencies
  apt:
    name:
      - build-essential
      - ca-certificates
      - clang
      - clang-11
      - gcc
      - git
      - gnupg
      - libssl-dev
      - llvm-11
      - lsb-release
      - make
      - pkg-config
      - wget
    state: present
    update_cache: yes

- name: Add Postgres GPG key
  command: "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys {{ postgresql_gpg_key }}"

- name: Add Postgres PPA
  copy:
	dest: /etc/apt/sources.list.d/pgdg.list
	content: |
	  deb https://apt-archive.postgresql.org/pub/repos/apt {{ ubuntu_release }}-pgdg-archive main
	  deb-src https://apt-archive.postgresql.org/pub/repos/apt {{ ubuntu_release }}-pgdg-archive main

- name: Create local PPA
  copy:
	dest: /etc/apt/sources.list.d/temp.list
	content: "deb [ trusted=yes ] file:///tmp/build ./"

- name: Set work directory
  command: mkdir -p /tmp/build
  args:
	creates: /tmp/build

- name: Generate Packages file
  shell: dpkg-scanpackages . > Packages
  args:
	chdir: /tmp/build

- name: Update apt cache without gzip indexes
  shell: apt-get -o Acquire::GzipIndexes=false update

- name: Set environment variables
  lineinfile:
	path: /etc/environment
	line: "{{ item }}"
	create: yes
  with_items:
	- "DEBIAN_FRONTEND=noninteractive"
	- "PYTHONDONTWRITEBYTECODE=1"
	- "DEB_BUILD_OPTIONS=nocheck parallel={{ ansible_processor_vcpus }}"
	- "DEB_CPPFLAGS_APPEND={{ CPPFLAGS }} -fsigned-char"

- name: Build dependencies for postgresql-common and pgdg-keyring
  apt:
	name:
	  - postgresql-common
	  - pgdg-keyring
	state: build-dep
	update_cache: yes

- name: Compile postgresql-common and pgdg-keyring
  command: apt-get source --compile postgresql-common pgdg-keyring

- name: Generate Packages file
  shell: dpkg-scanpackages . > Packages

- name: Update apt cache without gzip indexes
  shell: apt-get -o Acquire::GzipIndexes=false update

- name: Build dependencies for specific postgresql version
  apt:
	name: "postgresql-{{ postgresql_major }}={{ postgresql_release }}-1.pgdg{{ ubuntu_release_no }}+1"
	state: build-dep
	update_cache: yes

- name: Compile specific postgresql version
  command: "apt-get source --compile postgresql-{{ postgresql_major }}={{ postgresql_release }}-1.pgdg{{ ubuntu_release_no }}+1"

- name: Generate Packages file again
  shell: dpkg-scanpackages . > Packages

- name: Update apt cache without gzip indexes again
  shell: apt-get -o Acquire::GzipIndexes=false update

- name: plrust - install rust
  become: yes
  become_user: postgres
  become_method: su
  shell: |
    wget -qO- https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain={{ plrust_language_version }}
    echo 'source "$HOME/.cargo/env"' >> $HOME/.bashrc
  args:
    creates: "$HOME/.cargo"

- name: plrust - install rust toolchain and set default
  become: yes
  become_user: postgres
  become_method: su
  shell: |
    source $HOME/.cargo/env
    rustup toolchain install {{ plrust_language_version }}
    rustup default {{ plrust_language_version }}
  args:
    executable: /bin/bash

- name: plrust - add rust components and target
  become: yes
  become_user: postgres
  become_method: su
  shell: |
    source $HOME/.cargo/env
    rustup component add llvm-tools-preview rustc-dev
    rustup target install x86_64-unknown-linux-gnu
    rustup target install aarch64-unknown-linux-gnu
  args:
    executable: /bin/bash

- name: plrust - install plrust
  ansible.builtin.apt:
    deb: "https://github.com/supabase/plrust/releases/download/v{{ plrust_release }}/plrust-trusted-{{ plrust_release }}_{{ plrust_language_version }}-debian-pg{{ postgresql_major }}-{{ platform }}.deb"

- name: test plrust
  shell: psql -c "CREATE FUNCTION add_two_numbers(a NUMERIC, b NUMERIC) RETURNS NUMERIC STRICT LANGUAGE plrust AS $$ Ok(Some(a+b))$$; select add_two_numbers(1, 2);"
  become: yes
  become_user: postgres
